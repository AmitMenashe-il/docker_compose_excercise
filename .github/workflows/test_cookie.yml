name: Docker Compose Test

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:latest
        options: --privileged
        ports:
          - 80:80

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and run Docker Compose
        run: |
          docker-compose up -d --build

      - name: Wait for containers to start
        run: sleep 30  # Adjust this wait time based on your app startup time

      # Add further steps for testing your application here.
      # This can include running tests, making API requests, etc.

      # For example, if your application has tests, you might run them like this:
      - name: Run tests
        run: |
          # Run tests against your application
          echo 'port 80'
          curl -c cookie.txt http://Nginx # put cookie in file
          echo 'port 8080'
          curl -c cookie.txt http://Nginx:8080 # put cookie in file
          for i in {1..10}; do
            curl -b cookie.txt http://localhost:8080 # use cookie from file
            sleep 1  # Adjust wait time between requests
            cat cookie.txt
          done

          echo "::set-output name=cookie::$(base64 cookie.txt)"
        id: upload-cookie
        continue-on-error: true

      - name: Save artifact
        uses: actions/upload-artifact@v2
        if: ${{ steps.upload-cookie.outcome == 'success' }}
        with:
          name: my-artifact
          path: cookie.txt
  
      # Finally, tear down the containers after testing
      - name: Stop and remove containers
        run: docker-compose down
